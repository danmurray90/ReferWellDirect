# Generated by Django 4.2.7 on 2025-09-14 11:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Psychologist",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Professional title (Dr., Prof., etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "qualifications",
                    models.JSONField(
                        blank=True, default=list, help_text="List of qualifications"
                    ),
                ),
                (
                    "specialisms",
                    models.JSONField(
                        blank=True, default=list, help_text="List of specialisms"
                    ),
                ),
                (
                    "languages",
                    models.JSONField(default=["en"], help_text="Languages spoken"),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("nhs", "NHS"),
                            ("private", "Private"),
                            ("mixed", "Mixed"),
                        ],
                        default="mixed",
                        max_length=10,
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        choices=[
                            ("in_person", "In-Person"),
                            ("remote", "Remote"),
                            ("mixed", "Mixed"),
                        ],
                        default="mixed",
                        max_length=10,
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("address_line_1", models.CharField(blank=True, max_length=100)),
                ("address_line_2", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=50)),
                ("postcode", models.CharField(blank=True, max_length=10)),
                ("country", models.CharField(default="United Kingdom", max_length=50)),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        help_text="Professional registration number",
                        max_length=50,
                    ),
                ),
                (
                    "registration_body",
                    models.CharField(
                        blank=True,
                        help_text="Registration body (HCPC, BPS, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "years_experience",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "availability_status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("busy", "Busy"),
                            ("unavailable", "Unavailable"),
                            ("on_leave", "On Leave"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "max_patients",
                    models.PositiveIntegerField(
                        default=50, help_text="Maximum number of patients"
                    ),
                ),
                (
                    "current_patients",
                    models.PositiveIntegerField(
                        default=0, help_text="Current number of patients"
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Hourly rate in GBP",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "session_duration",
                    models.PositiveIntegerField(
                        default=60, help_text="Standard session duration in minutes"
                    ),
                ),
                (
                    "preferred_age_groups",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Preferred patient age groups",
                    ),
                ),
                (
                    "preferred_conditions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Preferred conditions to treat",
                    ),
                ),
                (
                    "max_distance_km",
                    models.PositiveIntegerField(
                        default=100, help_text="Maximum distance willing to travel"
                    ),
                ),
                (
                    "embedding",
                    models.TextField(
                        blank=True,
                        help_text="Vector embedding for similarity matching",
                        null=True,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_accepting_referrals", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_updated_embedding", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_psychologists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="psychologist_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Psychologist",
                "verbose_name_plural": "Psychologists",
                "db_table": "catalogue_psychologist",
            },
        ),
        migrations.CreateModel(
            name="Specialism",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category grouping (e.g., 'Anxiety', 'Trauma')",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Specialism",
                "verbose_name_plural": "Specialisms",
                "db_table": "catalogue_specialism",
                "indexes": [
                    models.Index(fields=["name"], name="catalogue_s_name_8cef3d_idx"),
                    models.Index(
                        fields=["category"], name="catalogue_s_categor_00a8d0_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="catalogue_s_is_acti_987eda_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Qualification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True,
                        help_text="Common abbreviation (e.g., 'DClinPsy')",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Qualification",
                "verbose_name_plural": "Qualifications",
                "db_table": "catalogue_qualification",
                "indexes": [
                    models.Index(fields=["name"], name="catalogue_q_name_fdc04e_idx"),
                    models.Index(
                        fields=["abbreviation"], name="catalogue_q_abbrevi_0c7a73_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="catalogue_q_is_acti_2c4545_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "modality",
                    models.CharField(
                        choices=[
                            ("in_person", "In-Person"),
                            ("remote", "Remote"),
                            ("mixed", "Mixed"),
                        ],
                        default="in_person",
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "psychologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="catalogue.psychologist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Availability",
                "verbose_name_plural": "Availabilities",
                "db_table": "catalogue_availability",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("is_verified", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "psychologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="catalogue.psychologist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
                "verbose_name_plural": "Reviews",
                "db_table": "catalogue_review",
                "indexes": [
                    models.Index(
                        fields=["psychologist", "rating"],
                        name="catalogue_r_psychol_938dca_idx",
                    ),
                    models.Index(
                        fields=["is_verified"], name="catalogue_r_is_veri_3f7ce2_idx"
                    ),
                    models.Index(
                        fields=["is_public"], name="catalogue_r_is_publ_0d4dac_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="catalogue_r_created_53a5c1_idx"
                    ),
                ],
                "unique_together": {("psychologist", "patient")},
            },
        ),
        migrations.AddIndex(
            model_name="psychologist",
            index=models.Index(
                fields=["service_type"], name="catalogue_p_service_15b123_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="psychologist",
            index=models.Index(
                fields=["modality"], name="catalogue_p_modalit_211fda_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="psychologist",
            index=models.Index(
                fields=["availability_status"], name="catalogue_p_availab_efcb47_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="psychologist",
            index=models.Index(
                fields=["is_active"], name="catalogue_p_is_acti_62aabd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="psychologist",
            index=models.Index(
                fields=["is_accepting_referrals"], name="catalogue_p_is_acce_2b38d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="psychologist",
            index=models.Index(
                fields=["registration_number"], name="catalogue_p_registr_73c868_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="availability",
            index=models.Index(
                fields=["psychologist", "day_of_week"],
                name="catalogue_a_psychol_7d3e9f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="availability",
            index=models.Index(
                fields=["is_active"], name="catalogue_a_is_acti_884b24_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="availability",
            unique_together={("psychologist", "day_of_week", "start_time", "end_time")},
        ),
    ]
