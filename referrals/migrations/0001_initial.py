# Generated by Django 4.2.7 on 2025-09-14 11:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Referral",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "referral_id",
                    models.CharField(
                        help_text="Human-readable referral ID",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("matching", "Matching"),
                            ("shortlisted", "Shortlisted"),
                            ("invited", "Invited"),
                            ("responded", "Responded"),
                            ("appointment_booked", "Appointment Booked"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("rejected", "Rejected"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("nhs", "NHS"),
                            ("private", "Private"),
                            ("mixed", "Mixed"),
                        ],
                        default="nhs",
                        max_length=10,
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        choices=[
                            ("in_person", "In-Person"),
                            ("remote", "Remote"),
                            ("mixed", "Mixed"),
                        ],
                        default="mixed",
                        max_length=10,
                    ),
                ),
                (
                    "presenting_problem",
                    models.TextField(
                        help_text="Description of the patient's presenting problem"
                    ),
                ),
                (
                    "clinical_notes",
                    models.TextField(blank=True, help_text="Additional clinical notes"),
                ),
                (
                    "urgency_notes",
                    models.TextField(
                        blank=True, help_text="Notes about urgency if applicable"
                    ),
                ),
                (
                    "patient_preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Patient's preferences and requirements",
                    ),
                ),
                ("preferred_latitude", models.FloatField(blank=True, null=True)),
                ("preferred_longitude", models.FloatField(blank=True, null=True)),
                (
                    "max_distance_km",
                    models.PositiveIntegerField(
                        default=50, help_text="Maximum distance in kilometers"
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        default="en", help_text="Preferred language code", max_length=10
                    ),
                ),
                (
                    "required_specialisms",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of required specialisms",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_referrals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="referrals_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referrer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="referrals_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Referral",
                "verbose_name_plural": "Referrals",
                "db_table": "referrals_referral",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("system", "System"),
                            ("referral_update", "Referral Update"),
                            ("invitation", "Invitation"),
                            ("response", "Response"),
                            ("appointment", "Appointment"),
                            ("general", "General"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("is_important", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="referrals.referral",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "db_table": "referrals_message",
            },
        ),
        migrations.CreateModel(
            name="Candidate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("shortlisted", "Shortlisted"),
                            ("invited", "Invited"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "similarity_score",
                    models.FloatField(
                        blank=True,
                        help_text="Similarity score from matching algorithm",
                        null=True,
                    ),
                ),
                (
                    "structured_score",
                    models.FloatField(
                        blank=True,
                        help_text="Score from structured features",
                        null=True,
                    ),
                ),
                (
                    "final_score",
                    models.FloatField(
                        blank=True, help_text="Final combined score", null=True
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        blank=True, help_text="Calibrated confidence score", null=True
                    ),
                ),
                (
                    "matching_explanation",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Explanation of why this candidate was matched",
                    ),
                ),
                ("invited_at", models.DateTimeField(blank=True, null=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "response_notes",
                    models.TextField(
                        blank=True, help_text="Notes from psychologist's response"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "psychologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidate_referrals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidates",
                        to="referrals.referral",
                    ),
                ),
            ],
            options={
                "verbose_name": "Candidate",
                "verbose_name_plural": "Candidates",
                "db_table": "referrals_candidate",
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(help_text="Scheduled appointment time"),
                ),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        default=60, help_text="Appointment duration in minutes"
                    ),
                ),
                (
                    "location",
                    models.TextField(
                        blank=True,
                        help_text="Appointment location or video call details",
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        choices=[
                            ("in_person", "In-Person"),
                            ("remote", "Remote"),
                            ("mixed", "Mixed"),
                        ],
                        default="in_person",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Appointment notes")),
                (
                    "outcome_notes",
                    models.TextField(
                        blank=True, help_text="Notes about appointment outcome"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments_as_patient",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "psychologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments_as_psychologist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="referrals.referral",
                    ),
                ),
            ],
            options={
                "verbose_name": "Appointment",
                "verbose_name_plural": "Appointments",
                "db_table": "referrals_appointment",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("review_referral", "Review Referral"),
                            ("send_invitation", "Send Invitation"),
                            ("follow_up", "Follow Up"),
                            ("reminder", "Reminder"),
                            ("calibration", "Calibration"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("is_overdue", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("due_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="referrals.referral",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task",
                "verbose_name_plural": "Tasks",
                "db_table": "referrals_task",
                "indexes": [
                    models.Index(
                        fields=["assigned_to", "is_completed"],
                        name="referrals_t_assigne_a8539a_idx",
                    ),
                    models.Index(
                        fields=["task_type"], name="referrals_t_task_ty_7993ab_idx"
                    ),
                    models.Index(
                        fields=["priority"], name="referrals_t_priorit_c340db_idx"
                    ),
                    models.Index(
                        fields=["due_at"], name="referrals_t_due_at_2b26ae_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="referral",
            index=models.Index(
                fields=["referral_id"], name="referrals_r_referra_0cd2bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="referral",
            index=models.Index(fields=["status"], name="referrals_r_status_50a3e5_idx"),
        ),
        migrations.AddIndex(
            model_name="referral",
            index=models.Index(
                fields=["priority"], name="referrals_r_priorit_bf044d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="referral",
            index=models.Index(
                fields=["service_type"], name="referrals_r_service_b84c89_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="referral",
            index=models.Index(
                fields=["created_at"], name="referrals_r_created_81091c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["recipient", "is_read"], name="referrals_m_recipie_97ae04_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["sender", "created_at"], name="referrals_m_sender__d8b0cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["referral", "created_at"], name="referrals_m_referra_348534_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["message_type"], name="referrals_m_message_58abf8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidate",
            index=models.Index(
                fields=["referral", "status"], name="referrals_c_referra_32a830_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidate",
            index=models.Index(
                fields=["psychologist", "status"], name="referrals_c_psychol_936cd9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidate",
            index=models.Index(
                fields=["final_score"], name="referrals_c_final_s_222e9d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidate",
            index=models.Index(
                fields=["confidence_score"], name="referrals_c_confide_07794b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="candidate",
            unique_together={("referral", "psychologist")},
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["referral", "status"], name="referrals_a_referra_d98a4b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["patient", "scheduled_at"],
                name="referrals_a_patient_c5904d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["psychologist", "scheduled_at"],
                name="referrals_a_psychol_757dbc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["scheduled_at"], name="referrals_a_schedul_461211_idx"
            ),
        ),
    ]
