[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "referwell-direct"
version = "0.1.0"
description = "A Django-first referral matching platform for connecting patients with mental health professionals"
authors = [
    {name = "ReferWell Direct Team", email = "team@referwell.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "Django>=4.2,<5.0",
    "djangorestframework>=3.14.0",
    "django-cors-headers>=4.3.0",
    "django-environ>=0.11.0",
    "django-extensions>=3.2.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "django-celery-beat>=2.5.0",
    "django-celery-results>=2.5.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "geopy>=2.3.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.0",
    "pytest>=7.4.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.3.0",
    "django-debug-toolbar>=4.1.0",
    "django-stubs>=4.2.0",
    "djangorestframework-stubs>=3.14.0",
    "mypy>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.3.0",
    "django-debug-toolbar>=4.1.0",
    "django-stubs>=4.2.0",
    "djangorestframework-stubs>=3.14.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/referwell/referwell-direct"
Documentation = "https://github.com/referwell/referwell-direct#readme"
Repository = "https://github.com/referwell/referwell-direct.git"
Issues = "https://github.com/referwell/referwell-direct/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["referwell*", "accounts*", "referrals*", "catalogue*", "matching*", "inbox*", "payments*", "ops*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = ["referwell", "accounts", "referrals", "catalogue", "matching", "inbox", "payments", "ops"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sentence_transformers.*",
    "sklearn.*",
    "geopy.*",
    "factory.*",
    "freezegun.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "referwell.settings.development"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["referwell", "accounts", "referrals", "catalogue", "matching", "inbox", "payments", "ops"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
